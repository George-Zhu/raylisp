-*- mode: org; mode: auto-fill -*-
#+STARTUP: hidestars
#+STARTUP: odd
#+STARTUP: oddeven

* TODO Backtraces broken
  1. Test with x86 -- I hope this is a backend bug!
  2. Reduce a test-case and post to sbcl-devel.

* TODO FIXME
*** TODO Need RAY-MIN in addition to RAY-EXTENT
    Otherwise %FIND-INTERSECTION* can find intersections closer than
    it wants. Or is RAY-ORIGIN good enough?
*** TODO Now that light groups are in place there is no need for SCENE to be a defstruct
    Previously SCENE-COMPILED-SCENE needed to be fast.
* TODO ARCHITECTURE
*** TODO Shared parts
    To save memory
***** TODO Cache pattern key vectors
***** TODO Cache pattern function vectors when possible
      COMPUTE-PATTERN-FUNCTION needs to return a secondary value that
      indicates if it can be cached for (a) all cases (b) cases with
      identical transforms.
***** TODO Cache constantly functions
*** TODO Shared CSG shaders
    It should be possible to specify a toplevel shader for an entire CGS.
*** TODO Patterns
***** TODO Transform rest of pattern-like shaders into patterns
*** TODO Integrate pertubated normals into general shader framework
    As a subprotocol, maybe: shaders inheriting from NORMAL-SHADER
    could have extra magic applied to them -- or at least the normal
    frobbing stuff easily available. Alternatively move normals to
    same level of privilege as transformations, so that everyone
    gets them for "free".
*** TODO Automated tests
    In addition to functional unit tests, test-scenes and reference
    images would be golden, along with some sort of timings.
*** TODO Experiment with colors using generic functions
*** TODO Prototype-style operations on scene components
    Cloning with alterate transforms, etc.
*** TODO Named scene components (from master)
*** TODO CSG differences showing the cuttee-surface
    This is kind of nice the way it now works, actually, but it should
    be possible to tell the system to use the either to cuttee or the
    cutter. (Currently cutter is always used.)
*** TODO Manual bounding of objects
*** TODO Light buffers in SHADOW-FUNCTION
*** TODO CSG bounding
***** TODO Automatic hierarchies
      Deeps CSG should benefit from this
*** TODO Antialiasing
*** TODO Translucent shadows
    Possibly just a shader?
*** TODO Support for manual hierarchical bounding
    Sometimes humans are better.
*** TODO Path tracing
*** TODO Multithreading
    One worker-thread per core (configurable.)
    KD tree can be built in parallel.
    Raytracing itself is ridiculously parallel.
*** TODO Ray attenuation in transparent objects
    Simple homogenous mediums to start with.
*** TODO Volumetric rendering
*** TODO Vista buffer
    Projected bounding boxes to make fast decisions. At least those
    pixels where there is only a single object that can contribute
    are probably worth dealing with, no matter how good the KD tree
    is. Saving a perfect vista buffer from previous rendering might
    also be cool (this requires scenes to know when their geometry
    has changed, though.)
*** TODO Photon maps
*** TODO Backwards raytracing
    (Sampling the scene from light sources, collecting only those
    that hit the image plane.)
*** TODO OpenGL preview.
*** TODO Computing functions to shade a given pixel
    (Symbolic raytracing.)
*** TODO Real colors. (Wavelength based rendering.)

* TODO SCENE COMPONENTS
*** TODO Area lights
***** TODO Line-light needs :start and :end keywords
***** TODO Circular area light
***** TODO Square area light
***** TODO All variants buildable with just AREA-LIGHT class
*** TODO Fake area lights
    AKA fake soft shadows, aka cheap soft shadows.
*** TODO Fake IOR
    Aka cheap caustics.
*** TODO Turbulence shader
*** TODO Variant reflection
*** TODO Fill lights
***** TODO Make filling selective: shadowed by some objects, not all.
*** TODO Cylinder
***** TODO CSG
*** TODO Torus
*** TODO Height fields
*** TODO Radiosity shader
*** TODO Metallic shaders
* TODO CAMERAS
*** TODO Fisheye camera
*** TODO Focal blur
* TODO MISCELLANY
*** Shearing transformations
    Nice constructor on SB-CGA needed.

